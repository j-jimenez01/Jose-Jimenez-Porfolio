{"ast":null,"code":"var _jsxFileName = \"/Users/josejimenez/GitHub/newPortfolio/src/pages/Home.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import '../styles/RocketStyle.css'; // Assuming you have the RocketStyle.css file in the same directory as this component\n// import rocketImage from './rocket.png'; // Assuming the rocket image is in the same directory as this component\n\n// export default function Home() {\n//   // Function to create stars\n//   function stars() {\n//     let count = 20;\n//     let starsElements = [];\n//     let i = 0;\n//     while (i < count) {\n//       let star = (\n//         <i\n//           key={i}\n//           style={{\n//             left: Math.floor(Math.random() * window.innerWidth) + 'px',\n//             width: '1px',\n//             height: 50 + Math.random() * 100 + 'px',\n//             animationDuration: Math.random() + 's',\n//           }}\n//         ></i>\n//       );\n//       starsElements.push(star);\n//       i++;\n//     }\n//     return starsElements;\n//   }\n\n//   return (\n//     <div>\n//       {/* <h1>Home</h1> */}\n//       <h1 className=\"line-1 anim-typewriter\">Jose Jimenez</h1>\n//       <div className=\"scene\">\n//         <div className=\"rocket\">\n//           <img src={rocketImage} alt=\"Rocket\" />\n//         </div>\n//         {stars()} {/* Call the stars function here to add the stars */}\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport '../styles/RocketStyle.css';\nimport rocketImage from './rocket.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [text, setText] = useState('');\n  useEffect(() => {\n    const name = 'Jose Jimenez';\n    let currentIndex = 0;\n    const intervalId = setInterval(() => {\n      setText(name.slice(0, currentIndex + 1));\n      currentIndex++;\n      if (currentIndex === name.length) {\n        clearInterval(intervalId);\n      }\n    }, 100); // Adjust the interval (in milliseconds) to control typing speed\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  function stars() {\n    // ... stars function remains unchanged\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"line-1 anim-typewriter\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rocket\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: rocketImage,\n          alt: \"Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), stars()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"4ujWDM02ns4tez/JXYjL1bw6ipA=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","rocketImage","jsxDEV","_jsxDEV","Home","_s","text","setText","name","currentIndex","intervalId","setInterval","slice","length","clearInterval","stars","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/josejimenez/GitHub/newPortfolio/src/pages/Home.js"],"sourcesContent":["// import React from 'react';\n// import '../styles/RocketStyle.css'; // Assuming you have the RocketStyle.css file in the same directory as this component\n// import rocketImage from './rocket.png'; // Assuming the rocket image is in the same directory as this component\n\n// export default function Home() {\n//   // Function to create stars\n//   function stars() {\n//     let count = 20;\n//     let starsElements = [];\n//     let i = 0;\n//     while (i < count) {\n//       let star = (\n//         <i\n//           key={i}\n//           style={{\n//             left: Math.floor(Math.random() * window.innerWidth) + 'px',\n//             width: '1px',\n//             height: 50 + Math.random() * 100 + 'px',\n//             animationDuration: Math.random() + 's',\n//           }}\n//         ></i>\n//       );\n//       starsElements.push(star);\n//       i++;\n//     }\n//     return starsElements;\n//   }\n\n//   return (\n//     <div>\n//       {/* <h1>Home</h1> */}\n//       <h1 className=\"line-1 anim-typewriter\">Jose Jimenez</h1>\n//       <div className=\"scene\">\n//         <div className=\"rocket\">\n//           <img src={rocketImage} alt=\"Rocket\" />\n//         </div>\n//         {stars()} {/* Call the stars function here to add the stars */}\n//       </div>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport '../styles/RocketStyle.css';\nimport rocketImage from './rocket.png';\n\nexport default function Home() {\n  const [text, setText] = useState('');\n\n  useEffect(() => {\n    const name = 'Jose Jimenez';\n    let currentIndex = 0;\n\n    const intervalId = setInterval(() => {\n      setText(name.slice(0, currentIndex + 1));\n      currentIndex++;\n\n      if (currentIndex === name.length) {\n        clearInterval(intervalId);\n      }\n    }, 100); // Adjust the interval (in milliseconds) to control typing speed\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  function stars() {\n    // ... stars function remains unchanged\n  }\n\n  return (\n    <div>\n      <h1 className=\"line-1 anim-typewriter\">{text}</h1>\n      <div className=\"scene\">\n        <div className=\"rocket\">\n          <img src={rocketImage} alt=\"Rocket\" />\n        </div>\n        {stars()}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,2BAA2B;AAClC,OAAOC,WAAW,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMQ,IAAI,GAAG,cAAc;IAC3B,IAAIC,YAAY,GAAG,CAAC;IAEpB,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCJ,OAAO,CAACC,IAAI,CAACI,KAAK,CAAC,CAAC,EAAEH,YAAY,GAAG,CAAC,CAAC,CAAC;MACxCA,YAAY,EAAE;MAEd,IAAIA,YAAY,KAAKD,IAAI,CAACK,MAAM,EAAE;QAChCC,aAAa,CAACJ,UAAU,CAAC;MAC3B;IACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAM;MACXI,aAAa,CAACJ,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,SAASK,KAAKA,CAAA,EAAG;IACf;EAAA;EAGF,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAIc,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAEV;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDlB,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACpBb,OAAA;QAAKc,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACrBb,OAAA;UAAKmB,GAAG,EAAErB,WAAY;UAACsB,GAAG,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EACLN,KAAK,CAAC,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CApCuBD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}